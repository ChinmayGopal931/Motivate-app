{"ast":null,"code":"var _jsxFileName = \"/Users/chinmaygopal/test/Motivate/src/PromiseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Stack, Button, FormControl, FormLabel, Input, InputGroup, HStack, InputRightAddon, Textarea, Box, FormHelperText, useToast, VStack, Link } from \"@chakra-ui/react\";\nimport Web3 from \"web3\";\nimport abi from \"./abi.json\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PromiseForm(props) {\n  _s();\n\n  const web3 = new Web3(window.ethereum);\n  const toast = useToast();\n  const [promiseAmount, setPromiseAmount] = useState(\"\");\n  const [promiseTask, setPromiseTask] = useState(\"I will \");\n  const [promiseDeadline, setPromiseDeadline] = useState(\"\");\n  const [friend, setFriend] = useState(\"\");\n  const [isWaitingForConfirmation, setIsWaitingForConfirmation] = useState(false);\n  const Contract = new web3.eth.Contract(abi, \"0x8E96E9B6bCB3DA7e7459f3115B4D4Ca364050429\");\n\n  const createPromise = async event => {\n    event.preventDefault();\n    setIsWaitingForConfirmation(true);\n    const nowTimestamp = new Date();\n    const endTimeStamp = Math.floor(nowTimestamp.setDate(nowTimestamp.getDate() + parseInt(promiseDeadline)) / 1000);\n    const tx = Contract.methods.createPromise(promiseTask, web3.utils.toWei(promiseAmount, \"ether\"), friend, endTimeStamp).send({\n      from: props.currentAccount,\n      value: web3.utils.toWei(promiseAmount, \"ether\")\n    }).on(\"error\", (error, receipt) => {\n      setIsWaitingForConfirmation(false);\n\n      if (error.code == 4001) {\n        toast({\n          position: \"bottom-right\",\n          title: \"User Denied Transaction\",\n          status: \"error\",\n          isClosable: true\n        });\n      } else {\n        var link = \"\";\n        link = `https://explorer-mainnet.maticvigil.com/tx/${receipt.transactionHash}`;\n        toast({\n          position: \"bottom-right\",\n          isClosable: true,\n          render: () => /*#__PURE__*/_jsxDEV(Box, {\n            color: \"white\",\n            borderRadius: 3,\n            p: 3,\n            bg: \"red.400\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              isExternal: true,\n              href: link,\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [\"View Transaction \", /*#__PURE__*/_jsxDEV(ExternalLinkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        });\n      }\n    }).on(\"transactionHash\", hash => {\n      setIsWaitingForConfirmation(false);\n      var link;\n      link = `https://explorer-mainnet.maticvigil.com/tx/${hash}`;\n      toast({\n        position: \"bottom-right\",\n        render: () => /*#__PURE__*/_jsxDEV(Box, {\n          color: \"white\",\n          borderRadius: 3,\n          p: 3,\n          bg: \"green.400\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            isExternal: true,\n            href: link,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [\"View Transaction \", /*#__PURE__*/_jsxDEV(ExternalLinkIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    boxShadow: \"lg\",\n    mt: \"3rem !important\",\n    as: \"div\",\n    alignSelf: \"center\",\n    padding: 10,\n    borderRadius: 10,\n    margin: \"auto\",\n    maxW: 1000000,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createPromise,\n      method: \"POST\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        justifyContent: \"center\",\n        maxWidth: 1000,\n        spacing: 5,\n        margin: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            w: 600,\n            justify: \"center\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              as: \"label\",\n              fontSize: 22,\n              children: \"I Promise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              maxW: 40,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                onChange: ({\n                  target\n                }) => setPromiseAmount(target.value),\n                value: promiseAmount,\n                type: \"number\",\n                isRequired: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightAddon, {\n                children: \"MATIC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              fontSize: 22,\n              children: \"that\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Textarea, {\n            isRequired: true,\n            onChange: ({\n              target\n            }) => setPromiseTask(target.value),\n            value: promiseTask,\n            size: \"lg\",\n            resize: \"vertical\",\n            rows: \"3\",\n            cols: \"45\",\n            placeholder: \"I will\",\n            variant: \"outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            justify: \"center\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              as: \"label\",\n              fontSize: 22,\n              children: \"in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              maxW: 40,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                onChange: ({\n                  target\n                }) => setPromiseDeadline(target.value),\n                value: promiseDeadline,\n                type: \"number\",\n                isRequired: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              fontSize: 22,\n              children: \"days.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: ({\n              target\n            }) => setFriend(target.value),\n            value: friend,\n            isRequired: true,\n            placeholder: \"Arbitrator's wallet address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            isLoading: isWaitingForConfirmation,\n            width: \"100%\",\n            fontSize: 20,\n            py: 7,\n            type: \"submit\",\n            variant: \"solid\",\n            colorScheme: \"green\",\n            children: \"Promise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PromiseForm, \"NR9jSSptNJliwZpQdBT5ybDzbw0=\", false, function () {\n  return [useToast];\n});\n\n_c = PromiseForm;\nexport default PromiseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PromiseForm\");","map":{"version":3,"sources":["/Users/chinmaygopal/test/Motivate/src/PromiseForm.js"],"names":["useState","Stack","Button","FormControl","FormLabel","Input","InputGroup","HStack","InputRightAddon","Textarea","Box","FormHelperText","useToast","VStack","Link","Web3","abi","ExternalLinkIcon","PromiseForm","props","web3","window","ethereum","toast","promiseAmount","setPromiseAmount","promiseTask","setPromiseTask","promiseDeadline","setPromiseDeadline","friend","setFriend","isWaitingForConfirmation","setIsWaitingForConfirmation","Contract","eth","createPromise","event","preventDefault","nowTimestamp","Date","endTimeStamp","Math","floor","setDate","getDate","parseInt","tx","methods","utils","toWei","send","from","currentAccount","value","on","error","receipt","code","position","title","status","isClosable","link","transactionHash","render","cursor","hash","target"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport {\n    Stack,\n    Button,\n    FormControl,\n    FormLabel,\n    Input,\n    InputGroup,\n    HStack,\n    InputRightAddon,\n    Textarea,\n    Box,\n    FormHelperText,\n    useToast,\n    VStack,\n    Link\n} from \"@chakra-ui/react\";\nimport Web3 from \"web3\";\nimport abi from \"./abi.json\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\n\nfunction PromiseForm(props) {\n    const web3 = new Web3(window.ethereum);\n    const toast = useToast();\n    const [promiseAmount, setPromiseAmount] = useState(\"\");\n    const [promiseTask, setPromiseTask] = useState(\"I will \");\n    const [promiseDeadline, setPromiseDeadline] = useState(\"\");\n    const [friend, setFriend] = useState(\"\");\n    const [isWaitingForConfirmation, setIsWaitingForConfirmation] = useState(false);\n\n    const Contract = new web3.eth.Contract(abi, \"0x8E96E9B6bCB3DA7e7459f3115B4D4Ca364050429\");\n\n    const createPromise = async (event) => {\n        event.preventDefault();\n        setIsWaitingForConfirmation(true);\n        const nowTimestamp = new Date();\n        const endTimeStamp = Math.floor(nowTimestamp.setDate(nowTimestamp.getDate() + parseInt(promiseDeadline)) / 1000);\n        const tx = Contract.methods.createPromise(promiseTask, web3.utils.toWei(promiseAmount, \"ether\"), friend, endTimeStamp)\n        .send({from: props.currentAccount, value:web3.utils.toWei(promiseAmount, \"ether\")})\n        .on(\"error\", (error, receipt) => {\n            setIsWaitingForConfirmation(false);\n            if(error.code == 4001) {\n                toast({\n                    position: \"bottom-right\",\n                    title: \"User Denied Transaction\",\n                    status: \"error\",\n                    isClosable: true\n                });\n            } else {\n                var link = \"\";\n                link = `https://explorer-mainnet.maticvigil.com/tx/${receipt.transactionHash}`;\n                toast({\n                    position: \"bottom-right\",\n                    isClosable: true,\n                    render: () => (\n                        <Box color=\"white\" borderRadius={3} p={3} bg=\"red.400\">\n                            <Link isExternal href={link} style={{cursor: \"pointer\"}}>\n                                View Transaction <ExternalLinkIcon />\n                            </Link>\n                        </Box>\n                    )\n                });\n            }\n        })\n        .on(\"transactionHash\", (hash) => {\n            setIsWaitingForConfirmation(false);\n            var link;\n            link = `https://explorer-mainnet.maticvigil.com/tx/${hash}`;\n            toast({\n                position: \"bottom-right\",\n                render: () => (\n                    <Box color=\"white\" borderRadius={3} p={3} bg=\"green.400\">\n                        <Link isExternal href={link} style={{cursor: \"pointer\"}}>\n                            View Transaction <ExternalLinkIcon />\n                        </Link>\n                    </Box>\n                )\n            });\n        });\n    }\n\n    return (\n        <Box boxShadow=\"lg\" mt=\"3rem !important\"  as=\"div\" alignSelf=\"center\" padding={10} borderRadius={10} margin=\"auto\" maxW={1000000}>\n            <form onSubmit={createPromise} method=\"POST\">\n                <Stack justifyContent=\"center\" maxWidth={1000} spacing={5} margin=\"auto\">\n                    <FormControl>\n                        <HStack w={600} justify=\"center\" align=\"center\">\n                            <FormLabel as=\"label\" fontSize={22}>\n                                I Promise\n                            </FormLabel>\n                            <InputGroup maxW={40}>\n                                <Input onChange={({target}) => setPromiseAmount(target.value)} value={promiseAmount} type=\"number\" isRequired />\n                                <InputRightAddon children=\"MATIC\" />\n                            </InputGroup>\n                            <FormLabel fontSize={22}>\n                                that\n                            </FormLabel>\n                        </HStack>\n                    </FormControl>\n                    <FormControl>\n                        <Textarea isRequired onChange={({target}) => setPromiseTask(target.value)} value={promiseTask} size=\"lg\" resize=\"vertical\" rows=\"3\" cols=\"45\" placeholder=\"I will\" variant=\"outline\" />\n                    </FormControl>\n                    <FormControl>\n                        <HStack justify=\"center\" align=\"center\">\n                            <FormLabel as=\"label\" fontSize={22}>\n                                in\n                        </FormLabel>\n                            <InputGroup maxW={40}>\n                                <Input onChange={({target}) => setPromiseDeadline(target.value)} value={promiseDeadline} type=\"number\" isRequired />\n                            </InputGroup>\n                            <FormLabel fontSize={22}>\n                                days.\n                        </FormLabel>\n                        </HStack>\n                    </FormControl>\n                    <FormControl>\n                        <Input onChange={({target}) => setFriend(target.value)} value={friend} isRequired placeholder=\"Arbitrator's wallet address\" />\n                    </FormControl>\n                    <FormControl textAlign=\"center\">\n                        <Button isLoading={isWaitingForConfirmation} width=\"100%\" fontSize={20} py={7} type=\"submit\" variant=\"solid\" colorScheme=\"green\">Promise</Button>\n                    </FormControl>\n                </Stack>\n            </form>\n        </Box>\n    )\n}\n\nexport default PromiseForm;\n"]},"metadata":{},"sourceType":"module"}