{"ast":null,"code":"var _jsxFileName = \"/Users/chinmaygopal/test/Motivate/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { Stack, useDisclosure } from \"@chakra-ui/react\";\nimport Header from './Header';\nimport PromiseForm from \"./PromiseForm\";\nimport ModalComponent from \"./ModalComponent\";\nimport InstallMetamask from \"./InstallMetamask\";\nimport React from 'react';\nimport AddChain from './AddChain';\nimport Web3 from 'web3';\nimport HowItWorks from './HowItWorks';\nimport Promises from './Promises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const web3 = new Web3(window.ethereum);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [currentAccount, setCurrentAccount] = useState();\n  const [chainId, setChainId] = useState();\n  useEffect(() => {\n    if (window.ethereum) {\n      setCurrentAccount(window.ethereum.selectedAddress);\n      setChainId(window.ethereum.networkVersion);\n    }\n  }, [currentAccount, chainId, window.ethereum]);\n\n  if (window.ethereum) {\n    window.ethereum.on(\"accountsChanged\", accounts => {\n      setCurrentAccount(accounts[0]);\n    });\n    window.ethereum.on(\"chainChanged\", async chainId => {\n      const newChainId = await web3.eth.getChainId();\n      setChainId(newChainId);\n    });\n  }\n\n  const [isHome, setIsHome] = useState(true);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      justify: \"center\",\n      spacing: 20,\n      height: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setIsHome: setIsHome,\n        currentAccount: currentAccount,\n        setCurrentAccount: setCurrentAccount,\n        onOpen: onOpen,\n        chainId: chainId,\n        chain: chainId == \"137\" ? \"MAINNET\" : \"INVALID CHAIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isHome ? /*#__PURE__*/_jsxDEV(PromiseForm, {\n        currentAccount: currentAccount,\n        chainId: chainId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Promises, {\n        currentAccount: currentAccount,\n        chainId: chainId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), window.ethereum === undefined ? /*#__PURE__*/_jsxDEV(ModalComponent, {\n      children: /*#__PURE__*/_jsxDEV(InstallMetamask, {\n        isOpen: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ModalComponent, {\n      children: /*#__PURE__*/_jsxDEV(AddChain, {\n        isOpen: !(chainId == \"137\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalComponent, {\n      children: /*#__PURE__*/_jsxDEV(HowItWorks, {\n        onClose: onClose,\n        isOpen: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+Qc0ISMGPqeLM0CkzkZ5vZB9jE4=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chinmaygopal/test/Motivate/src/App.js"],"names":["useState","useEffect","Stack","useDisclosure","Header","PromiseForm","ModalComponent","InstallMetamask","React","AddChain","Web3","HowItWorks","Promises","App","web3","window","ethereum","isOpen","onOpen","onClose","currentAccount","setCurrentAccount","chainId","setChainId","selectedAddress","networkVersion","on","accounts","newChainId","eth","getChainId","isHome","setIsHome","undefined"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport { Stack, useDisclosure } from \"@chakra-ui/react\";\nimport Header from './Header';\nimport PromiseForm from \"./PromiseForm\";\nimport ModalComponent from \"./ModalComponent\";\nimport InstallMetamask from \"./InstallMetamask\";\nimport React from 'react';\nimport AddChain from './AddChain';\nimport Web3 from 'web3';\nimport HowItWorks from './HowItWorks';\nimport Promises from './Promises';\n\nfunction App() {\n  const web3 = new Web3(window.ethereum);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [currentAccount, setCurrentAccount] = useState();\n  const [chainId, setChainId] = useState();\n  useEffect(() => {\n    if(window.ethereum) {\n      setCurrentAccount(window.ethereum.selectedAddress);\n      setChainId(window.ethereum.networkVersion);\n    }\n  }, [currentAccount, chainId, window.ethereum]);\n\n  if(window.ethereum) {\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\n      setCurrentAccount(accounts[0]);\n    });\n  \n    window.ethereum.on(\"chainChanged\", async (chainId) => {\n      const newChainId = await web3.eth.getChainId();\n      setChainId(newChainId);\n    });\n  }\n  const [isHome, setIsHome] = useState(true);\n\n  return (\n    <React.Fragment>\n      <Stack justify=\"center\" spacing={20} height=\"100%\">\n        <Header setIsHome={setIsHome} currentAccount={currentAccount} setCurrentAccount={setCurrentAccount} onOpen={onOpen} chainId={chainId} chain={chainId == \"137\" ? \"MAINNET\" : \"INVALID CHAIN\"}  />\n        {\n          isHome ? \n          <PromiseForm currentAccount={currentAccount} chainId={chainId} /> :\n          <Promises currentAccount={currentAccount} chainId={chainId} />\n        } \n      </Stack>\n      {\n        window.ethereum === undefined ?\n        <ModalComponent>\n          <InstallMetamask isOpen=\"true\" /> \n        </ModalComponent> :\n        <ModalComponent>\n          <AddChain isOpen={!(chainId == \"137\")} />\n        </ModalComponent>\n      }\n      <ModalComponent>\n        <HowItWorks onClose={onClose} isOpen={isOpen} />\n      </ModalComponent>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}